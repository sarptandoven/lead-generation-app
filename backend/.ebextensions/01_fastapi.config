option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: main:app
    NumProcesses: 4
    NumThreads: 25
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current:$PYTHONPATH"
    ENVIRONMENT: "production"
    DATABASE_URL: "postgresql://postgres:${RDS_PASSWORD}@${RDS_ENDPOINT}:5432/postgres"
    JWT_SECRET: "${JWT_SECRET}"
    ALLOWED_ORIGINS: "https://${CLOUDFRONT_DOMAIN}"
  aws:autoscaling:launchconfiguration:
    InstanceType: t2.micro
    SecurityGroups: lead-gen-app-sg
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 4
  aws:elasticbeanstalk:environment:
    ServiceRole: aws-elasticbeanstalk-service-role
    LoadBalancerType: application
  aws:elbv2:listener:443:
    ListenerEnabled: true
    Protocol: HTTPS
    SSLCertificateArns: arn:aws:acm:us-east-1:ACCOUNT_ID:certificate/CERTIFICATE_ID
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx

packages:
  yum:
    gcc: []
    python3-devel: []
    postgresql-devel: []
    nginx: []

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      client_max_body_size 20M;
      client_body_timeout 120s;
      
      location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

container_commands:
  01_upgrade_pip:
    command: "pip install --upgrade pip"
  02_install_requirements:
    command: "pip install -r requirements.txt"
  03_collect_static:
    command: "python manage.py collectstatic --noinput"
  04_migrate_db:
    command: "python manage.py migrate"
    leader_only: true
  05_create_superuser:
    command: "python manage.py create_superuser"
    leader_only: true 